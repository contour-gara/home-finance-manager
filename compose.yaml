services:
  discord-bot:
    build:
      context: ./discord-bot
      dockerfile: Dockerfile
    depends_on:
      - ulid-sequencer
      - kafka-rest-proxy
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      ULID_SEQUENCER_BASE_URL: http://ulid-sequencer:8080
      KAFKA_REST_PROXY_BASE_URL: http://kafka-rest-proxy:8082

  ulid-sequencer:
    build:
      context: ./ulid-sequencer
      dockerfile: Dockerfile
    healthcheck:
      test: "curl -f http://localhost:8080 || exit 1"
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "18080:8080"
    environment:
      ULID_SEQUENCER_DATASOURCE_URL: jdbc:mysql://mysql:3306/home_finance_manager_ulid_db
      DATASOURCE_USERNAME: user
      DATASOURCE_PASSWORD: password

#  finance-core:
#    build:
#      context: ./finance-core
#      dockerfile: Dockerfile
#    depends_on:
#      - ulid-sequencer
#      - mysql
#      - kafka-broker

  mysql:
    image: mysql:8.0.43-oraclelinux9
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: home_finance_manager_ulid_db
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  kafka-broker:
    image: confluentinc/cp-kafka:8.0.0
#    hostname: broker
#    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-broker:29092,CONTROLLER://kafka-broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'home-finance-manager-kafka'
#      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:8.0.0
    depends_on:
      - kafka-broker
    ports:
      - "8082:8082"
#    hostname: rest-proxy
#    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
#      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - "18081:8080"
    depends_on:
      - kafka-broker
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker:29092
